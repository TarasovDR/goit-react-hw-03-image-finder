{"version":3,"sources":["services/Api/Api.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","Api","fetchImages","searchQuery","page","get","then","response","data","hits","console","log","ButtonMore","Button","onClick","type","ImageGalleryItemLi","ImageGalleryItemImage","ImageGalleryItem","alt","webformatURL","largeImageURL","loadLargeImageURL","src","ImageGalleryList","ImageGallery","images","onSelect","map","id","tags","SpinnerContainer","Loader","color","height","width","timeout","Component","Overlay","ModalContainer","modalRoot","document","querySelector","Modal","handleKeydown","e","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","SearchHeader","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","Searchbar","state","handleSubmit","preventDefault","onSubmit","reset","handleChange","value","setState","autocomplete","autoFocus","onChange","placeholder","App","error","isLoading","selectedImage","showModal","toggleLoader","prevState","catch","finally","toggleModal","nextPage","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af4b9410.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst API_KEY = '21723163-ca21d56557a4a0bebd6e19c52';\r\n\r\nfunction fetchImages ({searchQuery, page}) {\r\n  try {\r\n    return axios\r\n    .get(`?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits)\r\n  } catch {\r\n    console.log('error')\r\n  }\r\n}\r\n\r\nconst Api = {\r\n  fetchImages\r\n}\r\n\r\nexport default Api;","import styled from '@emotion/styled/macro';\r\n\r\nexport const ButtonMore = styled.button`\r\n  padding: 8px 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 12px;\r\n  margin-bottom: 12px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &Button:hover,\r\n  Button:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`","import React from 'react';\r\n\r\nimport {ButtonMore} from './Button.styled';\r\n\r\nconst Button = ({onClick}) => {\r\n  return(<ButtonMore type=\"button\" onClick={onClick}>Load more</ButtonMore>)\r\n}\r\n\r\nexport default Button;","import styled from '@emotion/styled/macro';\r\n\r\nexport const ImageGalleryItemLi = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const ImageGalleryItemImage = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ImageGalleryItemLi, ImageGalleryItemImage } from './ImageGalleryItem.styled';\r\n\r\nconst ImageGalleryItem = ({ alt=\"\", webformatURL, largeImageURL, loadLargeImageURL }) => {\r\n  return(\r\n    <ImageGalleryItemLi>\r\n      <ImageGalleryItemImage \r\n        alt={alt}\r\n        src={webformatURL}\r\n        onClick={()=>loadLargeImageURL(largeImageURL)}\r\n      />\r\n    </ImageGalleryItemLi>\r\n  )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    alt: PropTypes.string,\r\n    loadLargeImageURL: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ImageGalleryItem;","import styled from '@emotion/styled/macro';\r\n\r\nexport const ImageGalleryList = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from 'components/ImageGalleryItem';\r\nimport { ImageGalleryList } from './ImageGallery.styled';\r\n\r\nconst ImageGallery = ({images, onSelect}) => {\r\n  return (\r\n    <ImageGalleryList>\r\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItem \r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          alt={tags}\r\n          loadLargeImageURL={onSelect}\r\n        />\r\n      ))}\r\n    </ImageGalleryList>\r\n  )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import styled from '@emotion/styled/macro';\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`","import React, { Component } from 'react'\r\nimport Spinner from \"react-loader-spinner\";\r\nimport { SpinnerContainer } from './Loader.styled';\r\n\r\nexport default class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <SpinnerContainer>\r\n        <Spinner\r\n          type=\"Circles\"\r\n          color=\"#3f51b5\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      </SpinnerContainer>\r\n    );\r\n  }\r\n}","import styled from '@emotion/styled/macro';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`\r\n\r\nexport const ModalContainer = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport { Overlay, ModalContainer } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <Overlay onClick={this.handleBackdropClick}>\r\n        <ModalContainer>\r\n        <img src={this.props.largeImageURL} alt=\"\" />\r\n        </ModalContainer>\r\n      </Overlay>, modalRoot\r\n    )\r\n  }\r\n}\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;","import styled from '@emotion/styled/macro';\r\n\r\nexport const SearchHeader = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n  opacity: 1;\r\n  }\r\n`\r\n\r\nexport const SearchFormButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`\r\n\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`","import React, { Component } from 'react';\r\n\r\nimport { SearchHeader, SearchForm, SearchFormButton, SearchFormButtonLabel, SearchFormInput } from './Searchbar.styled';\r\n\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.reset();\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { value } = e.target;\r\n    this.setState({ searchQuery: value });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ searchQuery: '' });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <SearchHeader>\r\n        <SearchForm onSubmit={this.handleSubmit}>\r\n          <SearchFormButton type=\"submit\">\r\n            <SearchFormButtonLabel>\r\n            Search\r\n            </SearchFormButtonLabel>\r\n          </SearchFormButton>\r\n          <SearchFormInput \r\n            autocomplete=\"off\"\r\n            autoFocus\r\n            onChange={this.handleChange}\r\n            placeholder=\"Search images and photos\"\r\n            type=\"text\"\r\n            value={this.state.searchQuery}/>\r\n        </SearchForm>\r\n      </SearchHeader>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport Api from 'services/Api';\nimport Button from 'components/Button';\nimport ImageGallery from 'components/ImageGallery';\nimport Loader from 'components/Loader';\nimport Modal from 'components/Modal';\nimport Searchbar from 'components/Searchbar';\n\nclass App extends Component {\n  state = {\n    error: null,\n    images: [],\n    isLoading: false,\n    selectedImage: '',\n    page: 1,\n    searchQuery: '',\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n\n    if (this.state.page !== 2 && prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n    this.toggleLoader();\n\n    Api.fetchImages({ searchQuery, page })\n      .then(hits => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch(error => this.setState({ error: true }))\n      .finally(() => this.setState(this.toggleLoader()));\n  };\n\n  loadLargeImageURL = largeImageURL => {\n    this.setState({ selectedImage: largeImageURL });\n    this.toggleModal();\n  };\n\n  handleSubmit = value => {\n    this.setState({\n      images: [],\n      page: 1,\n      searchQuery: value,\n    });\n  };\n\n  nextPage = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  toggleLoader = () => {\n    this.setState(prevState => ({ isLoading: !prevState.isLoading }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images, isLoading, selectedImage, showModal } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSubmit} />\n        {isLoading && <Loader />}\n        <ImageGallery images={images} onSelect={this.loadLargeImageURL} />\n        {images.length > 0 && <Button onClick={this.fetchImages} />}\n        {showModal && (\n          <Modal onClose={this.toggleModal} largeImageURL={selectedImage} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}